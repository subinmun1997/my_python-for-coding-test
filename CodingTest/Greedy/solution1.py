'''
그리디 알고리즘
'현재 상황에서 지금 당장 좋은 것만 고르는 방법'
매 순간 가장 좋아 보이는 것을 선택하며, 현재의 선택이 나중에 미칠 영향에 대해서는 고려하지 않는다.

문제1: 거스름돈
카운터에는 거스름돈으로 사용할 500원,100원,50원,10원짜리 동전이 무한히 존재한다고 가정한다.
손님에게 거슬러 줘야 할 돈이 N원일 때 거슬러줘야 할 동전의 최소 개수를 구하라.
단, 거슬러 줘야 할 돈 N은 항상 10의 배수이다.

문제 해설: 가장 큰 화폐 단위부터 돈을 거슬러 준다.

시간 복잡도; O(k) K:화폐의 종류
코드를 보면 화폐의 종류만큼 반복을 수행해야 한다. 따라서 화폐의 종류가 K개라고 할 때 위 소스코드의 시간 복잡도는 O(k)이다.
이 알고리즘의 시간 복잡도는 동전의 총 종류에만 영향을 받고, 거슬러 줘야하는 금액의 크기와는 무관하다는 것을 알 수 있다.
'''
n = int(input()) # 손님이 낸 돈 n
coins = [500,100,50,10]

total = 0
for coin in coins:
    total += n//coin
    n %= coin

print(total)